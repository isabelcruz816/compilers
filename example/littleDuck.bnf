/* Lexical Part */

_digit : '0'-'9' ;

_digits : _digit {_digit} ;

id : 'a'-'z' {'a'-'z' | 'A'-'Z' | _digit } ;

number : _digits ['.'_digits]['E'['+' | '-']_digits] ;

_string : '"' {.} '"' ;

_cte_f : [0-9]* '.' [0-9]+ ;

_cte_i : [0-9]+ ;

!whitespace : ' ' | '\t' | '\n' | '\r' ;

/* Syntax Part */

PROGRAMA : "program" id ";" VARS BLOQUE ;

VARS : "var" VAR1 | empty ;
VAR1 : id VAR2 ":" TIPO ";" VAR3 ;
VAR2 : "," id VAR2 
    | empty ;
VAR3 : empty 
    | VAR1 ;

BLOQUE : "{" BLOQ1 "}" ;
BLOQ1 : ESTATUTO BLOQ1 
      | empty ;

ESTATUTO : ASIGNACION 
          | CONDICION 
          | ESCRITURA ;

ASIGNACION : id "=" EXPRESION ";" ;

CONDICION : "if" "(" EXPRESION ")" BLOQUE COND1 ;
COND1 : ";" 
      | "else" BLOQUE COND1 ;

EXPRESION : EXP EXPR1 ;
EXPR1 : empty 
      | EXPR2 EXP ;
EXPR2 : "<" 
      | ">" 
      | "<>" ;

EXP : TERMINO EXP1 ;
EXP1 : empty 
     | "+" EXP 
     | "-" EXP ;

TERMINO : FACTOR TERM1 ;
TERM1 : "*" TERMINO | "/" TERMINO
      | empty ;

TIPO : "int" 
     | "float" ;

ESCRITURA : "print" "(" PRINT1 ")" ";" ;
PRINT1 : EXPRESION PRINT2 
       | _string PRINT2 ;
PRINT2 : "," PRINT1 
       | empty ;

FACTOR : "(" EXPRESION ")" 
       | VAR_CTE 
       | "*" VAR_CTE | "/" VAR_CTE ;

VAR_CTE : id 
        | _cte_f | _cte_i ;