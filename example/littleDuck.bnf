/* Lexical Part */

_digit : '0'-'9' ;

_digits : _digit+

_id : 'a'-'z' {'a'-'z' | 'A'-'Z' | _digit } ;

_number : _digits ["."_digits]["E"['+' | '-']_digits]

_string : '"' {.} '"' ;

cte_i : "i" ;

cte_f : "f" ;

_epsilon : '' ;

!whitespace : ' ' | '\t' | '\n' | '\r' ;

/* Syntax Part */

PROGRAMA : "program" _id ";" VARS BLOQUE ;

VARS : "var" VAR1 ;
VAR1 : _id VAR2 ":" TIPO ";" VAR3 ;
VAR2 : "," "_id" VAR2 
    | _epsilon ;
VAR3 : _epsilon 
    | VAR1 ;

BLOQUE : "{" BLOQ1 "}" ;
BLOQ1 : ESTATUTO BLOQ1 
      | _epsilon ;

ESTATUTO : ASIGNACION 
          | CONDICION 
          | ESCRITURA ;

ASIGNACION : _id "=" EXPRESION ";" ;

CONDICION : "if" "(" EXPRESION ")" BLOQUE COND1 ;
COND1 : ";" 
      | "else" BLOQUE COND1 ;

EXPRESION : EXP EXPR1 ;
EXPR1 : _epsilon 
      | EXPR2 EXP ;
EXPR2 : "<" 
      | ">" 
      | "<>" ;

EXP : TERMINO EXP1 ;
EXP1 : _epsilon 
     | "+" EXP 
     | "-" EXP ;

TERMINO : FACTOR TERM1 ;
TERM1 : ["*" | "/"] TERMINO 
      | _epsilon ;

TIPO : "int" 
     | "float" ;

ESCRITURA : "print" "(" PRINT1 ")" ";" ;
PRINT1 : EXPRESION PRINT2 
       | _string PRINT2 ;
PRINT2 : "," PRINT1 
       | _epsilon ;

FACTOR : "(" EXPRESIÃ“N ")" 
       | VAR_CTE 
       | ["*" | "/"] VAR_CTE ;

VAR_CTE : _id 
        | cte_i 
        | cte_f ;